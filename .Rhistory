library(PackageProject)
?hello
library(PackageProject)
?hello
?permutation
data <- tibble(Group = c(rep("ctrl",100),rep("case",100)),
Blood_pressure=(c(rnorm(100,mean=120,sd=20),
rnorm(100,mean = 115,sd=15))))
library(PackageProject)
?permutation
data <- tibble(Group = c(rep("ctrl",100),rep("case",100)),
Blood_pressure=(c(rnorm(100,mean=120,sd=20),
rnorm(100,mean = 115,sd=15))))
data <- cbind(Group = c(rep("ctrl",100),rep("case",100)),
Blood_pressure=(c(rnorm(100,mean=120,sd=20),
rnorm(100,mean = 115,sd=15))))
View(data)
as.data.frame(data)
data1 = as.data.frame(data)
View(data1)
permutation(groups = data1$Group, observations = data1$Blood_pressure, nPerm = 10)
library(tidyverse)
permutation(groups = data1$Group, observations = data1$Blood_pressure, nPerm = 10)
data <- tibble(Group = c(rep("ctrl",100),rep("case",100)),
Blood_pressure=(c(rnorm(100,mean=120,sd=20),
rnorm(100,mean = 115,sd=15))))
permutation(groups = data$Group, observations = data$Blood_pressure, nPerm = 10)
str(data1$Blood_pressure)
str(data1$Group)
View(data)
BloodPressure <- tibble(Group = c(rep("ctrl",100),rep("case",100)),
Blood_pressure=(c(rnorm(100,mean=120,sd=20),
rnorm(100,mean = 115,sd=15))))
save(BloodPressure, file="data/BloodPressure.RData")
library(PackageProject)
?BloodPressure
data("BloodPressure")
force(BloodPressure)
library(PackageProject)
?permutation
permutation(group = BloodPressure$Group, observations = BloodPressure$Blood_pressure)
devtools::install(build_vignettes = TRUE)
library(PackageProject)
?permutation
?PackageProject
devtools::use_vignette("Permutation")
devtools::use_vignette("permutation")
devtools::install(build_vignettes = TRUE)
usethis::use_vignette("permutatino")
usethis::use_vignette("permutation")
permutation(group = BloodPressure$Group, observations = BloodPressure$Blood_pressure, test_statistic = "mean", nPerm = 10^5, plot = TRUE)
getwd()
library(PackageProject)
?permutation
library(PackageProject)
?permutation()
?PackagePro
PackageProject
library(Nice)
library(Nice)
permutation
?bootstrap
?Nice
?output
source("perm_class.R")
getwd()
source("R/perm_class.R")
library(Nice)
?permutation
?Nice
?bootstrap
library(Nice)
?permutation
?bootstrap
?output
data("BloodPressure")
force(BloodPressure)
permutation(group)
permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
library(tidyverse)
permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
library(Nice)
permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
perm<- permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
summary(perm)
plot(perm)
library(Nice)
perm<- permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
summary(perm)
plot(perm)
class(perm)
# Calling plot on permutation
plot.permutation <- function(permutation) {
test_data <- permutation$data %>%
group_by(Group) %>%
summarise(Val = permutation$fun(Observations))
plot(ggplot(permutation$data) +
geom_histogram(aes(x = Observations, fill=Group),
alpha = 0.6, bins = 50, color = "white") +
geom_vline(data=test_data,
aes(xintercept=Val,
color=Group),
size = 0.8, linetype="dashed") +
annotate(geom="text", x = Inf,y=Inf,
label=paste(permutation$Method,"test:",round(permutation$ObsTestStat,2)),
size = 4,
vjust=2, hjust=1) +
theme_bw(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "The observed values",
y = "Counts"))
plot(ggplot() +
geom_histogram(aes(x = permutation$PermTestValues),
bins = 50,
color = "white",
fill = "blue",
alpha = 0.6) +
geom_vline(aes(xintercept = permutation$ObsTestStat, color = "Observed\ntest-stat"),
size = 0.8, linetype = "dashed") +
scale_color_manual(values = c("Observed\ntest-stat" = "red")) +
theme_bw(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "The null distribution for the test-statistic",
x = "test_statistic",
y = "Counts"))
}
library(Nice)
?permutation
perm <- permutation(groups = BloodPressure$Group, observations = BloodPressure$Blood_pressure, nPerm = 10)
perm
summary(perm)
plot(perm)
?summary()
